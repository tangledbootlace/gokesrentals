
@{
    ViewData["Title"] = "RequestToken";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<div id="login" class="container">
    <div class="row justify-content-center">
        <div class="col-lg-5">
            <div class="card mt-4">
                <article class="card-body">
                    <h4 class="card-title mb-4 mt-1">Reset Password</h4>
                    <form v-on:submit.prevent="">
                        <div class="form-group">
                            <label>Email</label>
                            <input name="" class="form-control" placeholder="Email" type="email" v-model="email">
                        </div>
                        <button v-if="busy" v-cloak class="btn btn-block btn-primary mb-4" disabled>Working...&nbsp;&nbsp;<i class="fa fa-sync fa-spin"></i></button>
                        <button v-else class="btn btn-block btn-primary mb-4" v-on:click="signIn">Request Password Reset</button>
                        <div v-cloak v-if="error" class="alert alert-danger">{{error}}</div>
                        <div v-cloak v-if="message" class="alert alert-success">{{message}}</div>
                    </form>
                </article>
            </div> <!-- card.// -->
        </div>
    </div>
</div>
<script>
    var loginPage;
    window.onload = function () {
        loginPage = new Vue({
            el: '#login',
            mounted: function () { //Everything here will execute on page load

            },
            data: {
                email: '',
                message: null,
                busy: false,
                error: null,

            },
            methods: {
                signIn: function () {
                    var me = this;
                    me.message = '';
                    if(me.email)
                    var payload = {
                        email: me.email                    };
                    me.busy = true;
                    $.ajax({
                        url: "request-token",
                        type: "POST",
                        async: true,
                        data: payload,
                        success: (response) => {
                            if (response.success) {
                                me.message = response.data;
                                me.error = null;
                            }
                            else {
                                me.error = response.error;
                                me.message = null
                            }
                        },
                        complete: () => {
                            me.busy = false;
                        }
                    });
                }
            },
            computed: {},
            filters: {},
        })
    }
</script>